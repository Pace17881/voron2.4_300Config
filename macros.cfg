[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=G32
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    #G0 X150 Y150 Z30 F3600
    RESTORE_GCODE_STATE NAME=G32


[gcode_macro PRINT_START]
gcode:
    SAVE_GCODE_STATE NAME=PRINT_START
    {% set chamber_temp = params.CHAMBER|default(0)|float %}
    M117 Heating...
    # Start bed heating and continue
    M140 S{params.BED|int} 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.EXTRUDER}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.BED}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.EXTRUDER}
    TEMPERATURE_WAIT SENSOR="temperature_sensor bed_outer" MINIMUM={params.BED}
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber_temp}

    #{% if params.BED|int >= 100 %}
    #  SET_FAN_SPEED FAN=exhaust_fan SPEED=1.0
    #{% endif %}

    #Home the printer
    M117 Homing...
    G32

    #Bed Mesh
    #M117 Calibrating mesh...
    #BED_MESH_CALIBRATE
    
    G90                       ; absolute positioning
    G0 X0 Y0 Z0.2 F6000       ; park nozzle at front left

    #Introline
    G92 E0.0
    G1 Z0.20 X100.0 E15 F1000.0 ; intro line
    G1 X200.0 E25 F1000.0 ; intro line
    G92 E0.0

    M117
    RESTORE_GCODE_STATE NAME=PRINT_START
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    #SET_FAN_SPEED FAN=exhaust_fan SPEED=0.0
    RESTORE_GCODE_STATE NAME=PRINT_END

[networkstatus]
interface: wlan0

[gcode_macro IP]
gcode:
  {action_respond_info(printer.networkstatus.ip)}
  M117 {printer.networkstatus.ip}

[gcode_macro FIL_LOAD_POS]
gcode:
    SAVE_GCODE_STATE NAME=FIL_LOAD_POS
    G90
    G0 X300 Y0 Z100 F6000
    RESTORE_GCODE_STATE NAME=FIL_LOAD_POS

[gcode_macro LIGHT_LARSON]
gcode:
  SET_LED LED=chamberled RED=0 GREEN=0 BLUE=0 WHITE=0
  {% for counter in range(1,40) %}
    SET_LED LED=chamberled RED=1 INDEX={counter}
    G4 P50
    SET_LED LED=chamberled RED=0 INDEX={counter}
  {% endfor %}

[gcode_macro LIGHT_ON]
gcode:
  SET_LED LED=chamberled RED=0 GREEN=0 BLUE=0 WHITE=0
  SET_LED LED=chamberled RED=1 GREEN=1 BLUE=1 WHITE=1

[gcode_macro LIGHT_OFF]
gcode:
  SET_LED LED=chamberled RED=0 GREEN=0 BLUE=0 WHITE=0

[gcode_macro TEST_STEPPER]
gcode:
    SAVE_GCODE_STATE NAME=TEST_STEPPER
    G32
    G90
    G0 Y0 X0 F6000
    G0 Y300 X300 F6000
    G0 Y150 X150 F6000
    G0 Z100 F6000
    G0 Z30 F6000
    G0 Y200
    G0 X50
    G0 Y300
    G0 X250
    RESTORE_GCODE_STATE NAME=TEST_STEPPER

[gcode_macro MOVE_TEST]
#use: MOVE_TEST F=300
gcode:
  {% set speed = params.F|default(100)|float %} ; speed in mm/s
  {% set x_max = printer.toolhead.axis_maximum.x|float - 5 %}
  {% set y_max = printer.toolhead.axis_maximum.y|float - 5 %}
  {% set x_min = printer.toolhead.axis_minimum.x|float + 5 %}
  {% set y_min = printer.toolhead.axis_minimum.y|float + 5 %}
  # home if needed
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G32
  {% endif %}
  SAVE_GCODE_STATE NAME=STATE_MOVE_TEST
  #move to start
  G90
  G0 Z50 F600
  G0 X{x_min} Y{y_min} F{speed*60}
  G0 X{x_min} Y{y_max} F{speed*60}
  G0 X{x_max} Y{y_min} F{speed*60}
  G0 X{x_min} Y{y_min} F{speed*60}
  G0 X{x_max} Y{y_max} F{speed*60}
  G0 X{x_max} Y{y_min} F{speed*60}
  G0 X{x_min} Y{y_max} F{speed*60}
  G0 X{x_max} Y{y_max} F{speed*60}
  G0 X{x_min} Y{y_min} F{speed*60}
  RESTORE_GCODE_STATE NAME=STATE_MOVE_TEST

[gcode_macro M190]
rename_existing: M190.1
variable_offset: 20.0
gcode:
  {% set temp = params.S|default(0)|float %}
  {% if temp == 0 %}
     {% set lim_temp = 0 %}
  {% elif (temp + offset) > printer.configfile.settings.heater_bed.max_temp|float %}
    {% set lim_temp = printer.configfile.settings.heater_bed.max_temp|float %}
  {% else %}
    {% set lim_temp = temp + offset %}
  {% endif %}
  M190.1 S{lim_temp}

[gcode_macro M140]
rename_existing: M140.1
gcode:
  {% set offset = printer['gcode_macro M190'].offset %}
  {% set temp = params.S|default(0)|float %}
  {% if temp == 0 %}
     {% set lim_temp = 0 %}
  {% elif (temp + offset) > printer.configfile.settings.heater_bed.max_temp|float %}
    {% set lim_temp = printer.configfile.settings.heater_bed.max_temp|float %}
  {% else %}
    {% set lim_temp = temp + offset %}
  {% endif %}
  M140.1 S{lim_temp}
